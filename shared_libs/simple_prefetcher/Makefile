CXX=g++
CC=gcc

LIBS=-lpthread -lrt -ldl #-lmpi
FLAGS=-fPIC -shared -std=c++14 -Wno-unused-result -O3 #-g
INCLUDE=

KB=1024
MB=`echo "$(KB)*1024" | bc`
25MB=`echo "$(KB)*1024*25" | bc`
15MB=`echo "$(KB)*1024*15" | bc`
5MB=`echo "$(KB)*1024*5" | bc`

NR_RA_PAGES=40
NR_WORKERS=2
PORTION_PAGES=64
NR_ADJACENT_CHECK=4
MIN_FILE_SZ=$(5MB)
CROSS_BITMAP_SHIFT=36

SOURCES = frontend.cpp predictor.cpp uinode.cpp mpiio.cpp utils/thpool.c utils/bitarray.c utils/hashtable.c utils/thpool-simple.c utils/fsck_lock.c cache_state_tree.cpp
SOURCESBASIC = libOSonly.cpp


#DEBUG=-DDEBUG
#ENABLE_LIB_STATS=-DENABLE_LIB_STATS #-DENABLE_PRED_STATS ##Comment if dont need lib stats
#ENABLE_OS_STATS=-DENABLE_OS_STATS ##comment if dont need OS STATS
#ENABLE_MPI=-DENABLE_MPI
OTHERFLAGS=-DMAINTAIN_UINODE -DPER_INODE_BITMAP $(ENABLE_MPI) $(ENABLE_OS_STATS) $(ENABLE_LIB_STATS)

VAR_FLAGS=-DNR_RA_PAGES=$(NR_RA_PAGES) -DNR_WORKERS=$(NR_WORKERS) -DPORTION_PAGES=$(PORTION_PAGES) $(OTHERFLAGS) #-D_ENABLE_PTHREAD_LOCK #-D_SPIN_XCHG_BACKOFF #-D_ENABLE_PTHREAD_LOCK
VAR_FLAGS+=-DNR_ADJACENT_CHECK=$(NR_ADJACENT_CHECK) -DMIN_FILE_SZ=$(MIN_FILE_SZ) -DCROSS_BITMAP_SHIFT=$(CROSS_BITMAP_SHIFT)


ONLY_INTERCEPT=-DONLY_INTERCEPT
DISABLE_FADV_RANDOM=-DDISABLE_FADV_RANDOM -DDISABLE_FADV_DONTNEED -DDISABLE_FADV_SEQUENTIAL  ##Disables any FADV_RANDOM from App
DISABLE_FADV_DONTNEED=#-DDISABLE_FADV_DONTNEED
DISABLE_MADV_DONTNEED=#-DDISABLE_MADV_DONTNEED
OS_ONLY=-DDISABLE_APP_READAHEADS


THPOOL_FILE_RA=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DBLIND_PREFETCH
THPOOL_BLOCK_RA=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DDISABLE_APP_READAHEAD

BLOCK_RA_INFO=-DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS -DBLIND_PREFETCH #-DPREFETCH_BOOST
THPOOL_BLOCK_RA_BUDGET=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DENABLE_EVICTION #-DPREFETCH_BOOST
THPOOL_BLOCK_RA_INFO_BUDGET=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DENABLE_EVICTION

THPOOL_BLOCK_RA_INFO=-DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS -DBLIND_PREFETCH -DTHPOOL_PREFETCH  #-DENABLE_EVICTION

THPOOL_FILE_RA_INFO=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS
PREDICTOR_THPOOL_FILE_RA=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DPREDICTOR
PREDICTOR_THPOOL_BLOCK_RA=-DTHPOOL_PREFETCH -DPREDICTOR


#Budget approaches
PREDICTOR_THPOOL_BLOCK_RA_BUDGET=-DTHPOOL_PREFETCH -DPREDICTOR -DMODIFIED_RA -DENABLE_EVICTION -DDISABLE_APP_READAHEADS
PREDICTOR_BLOCK_RA_BUDGET_INFO_SYNC=-DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS -DENABLE_EVICTION 



THPOOL_BLOCK_RA_BUDGET_INFO=-DTHPOOL_PREFETCH -DPREDICTOR -DMODIFIED_RA -DENABLE_EVICTION -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS



PREDICTOR_THPOOL_BLOCK_RA_INFO=-DTHPOOL_PREFETCH -DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS #-DPREFETCH_BOOST
PREDICTOR_THPOOL_BLOCK_RA_INFO_SYNC=-DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS #-DPREFETCH_BOOST
CONCURRENT_PREDICTOR_THPOOL_BLOCK_RA_INFO=-DTHPOOL_PREFETCH -DPREDICTOR  -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS -DCONCURRENT_PREDICTOR

LARGEREADS=-DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DSET_READ_UNLIMITED
OPTIMIZATIONS=-ljemalloc -D_PERF_OPT_EXTREME -D_PERF_OPT
BOOST=-DPREFETCH_BOOST
THREADPOOL=-DTHPOOL_PREFETCH

OPTIMIZATIONS_SEQ=-ljemalloc -D_PERF_OPT_EXTREME -D_PERF_OPT


#APPPREFETCH=-DDISABLE_APP_READAHEADS
PREDICTOR_THPOOL_BLOCK_RA_INFO_EXP=-DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE $(APPPREFETCH) $(THREADPOOL) $(LARGEREADS) $(OPTIMIZATIONS) $(BOOST) 
PREDICTOR_THPOOL_BLOCK_RA_INFO_EXP_OPT=-DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE $(APPPREFETCH) $(THREADPOOL) $(LARGEREADS) $(OPTIMIZATIONS_SEQ) $(BOOST) $(DISABLE_FADV_RANDOM) $(OS_ONLY) -DTUNE -DPREDICTOR 

PREDICTOR_THPOOL_BLOCK_RA_INFO_EXP_NOOPT=-DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE $(APPPREFETCH) $(THREADPOOL) $(OPTIMIZATIONS)


all: Vanilla Cross_Blind OSonly  Cross_Info_Predict_IOOPT Cross_Info_Predict_IOOPT_sync Cross_Info_IOOPT Cross_Info_IOOPT_sync Cross_Info_Pred_Budget_IOOPT Cross_Info_Pred_Budget_IOOPT_sync Cross_Info_Predict_sync Cross_Info_Predict_IOOPT_PERF Cross_Info_Pred_Budget_IOOPT_PERF Cross_Info_Predict_IOOPT_ITER Cross_Info_Predict_MMAP Cross_Info_Predict_IOOPT_PERF_NOOPT

#App Readahead + readahead syscall (Only constructor and destructor)
Vanilla: $(SOURCESBASIC) #$(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_Vanilla.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS)

OSonly: $(SOURCESBASIC) #$(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_OSonly.so $^ $(LIBS) $(DEBUG) \
	    $(DISABLE_FADV_RANDOM) $(OS_ONLY) #$(VAR_FLAGS) 

#Cross-Info + IOOPT
Cross_Info_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CII.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(DISABLE_FADV_DONTNEED) $(THPOOL_BLOCK_RA_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DTUNE

#Cross-Info + IOOPT - Thpool
Cross_Info_IOOPT_sync: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CII_sync.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(DISABLE_FADV_DONTNEED) $(BLOCK_RA_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT

#Cross_Info + Predictor + No thread pool
Cross_Info_Predict_sync: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIP_sync.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO_SYNC)


#Cross_Info_Predict + IOOPT
Cross_Info_Predict_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(DISABLE_FADV_DONTNEED) $(PREDICTOR_THPOOL_BLOCK_RA_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DTUNE

#Cross_Info_Predict + IOOPT + PERF_OPT
#Cross_Info_Predict_IOOPT_PERF: $(SOURCES)
#	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_PERF.so $^ $(LIBS) $(DEBUG) \
#	    $(VAR_FLAGS) $(PREDICTOR_THPOOL_BLOCK_RA_INFO) \
#	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DPREFETCH_BOOST -D_PERF_OPT_EXTREME -D_PERF_OPT -ljemalloc $(DISABLE_FADV_RANDOM) 
#
Cross_Info_Predict_IOOPT_PERF: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_PERF.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS)  \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT $(PREDICTOR_THPOOL_BLOCK_RA_INFO_EXP_OPT) -DTUNE

Cross_Info_Predict_IOOPT_PERF_NOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_PERF_NOOPT.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(PREDICTOR_THPOOL_BLOCK_RA_INFO_EXP_NOOPT) -DTUNE


Cross_Info_Pred_Budget_IOOPT_PERF: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CPBI_PERF.so $^ $(LIBS) $(DEBUG) $(VAR_FLAGS) $(THPOOL_BLOCK_RA_BUDGET_INFO) $(DISABLE_FADV_RANDOM) \
	       	-DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -ljemalloc -D_PERF_OPT -D_PERF_OPT_EXTREME -DPREFETCH_BOOST


Cross_Info_Predict_IOOPT_ITER: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_interval.so $^ $(LIBS) -Wl,--no-as-needed -lintervaltreelib $(DEBUG) \
		$(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO) \
		-DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DINTERVAL_BITMAP  -D_PERF_OPT -D_PERF_OPT_EXTREME -DDISABLE_RWLOCK

Cross_Info_Predict_MMAP:  $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_mmap.so $^ $(LIBS) $(DEBUG) \
		$(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO) \
		-DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT -DMMAP_PREDICT

#Cross_Info + IOOPT_+ Predictor + No thread pool
Cross_Info_Predict_IOOPT_sync: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI_sync.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO_SYNC) -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT	    
	    
Cross_Info_Pred_Budget_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CPBI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(THPOOL_BLOCK_RA_BUDGET_INFO) $(DISABLE_FADV_RANDOM)  -D_PERF_OPT -D_PERF_OPT_EXTREME -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT 

Cross_Info_Pred_Budget_IOOPT_sync: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CPBI_sync.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_BLOCK_RA_BUDGET_INFO_SYNC) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT


#Just blind prefetch, all app readahead disabled, readahead syscall
Cross_Blind: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_Cross_Blind.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(THPOOL_BLOCK_RA) $(DISABLE_FADV_DONTNEED)

    
CLEAR_STATS: clear-stats.c
	$(CC) $^ -o clear_os_stats


install:
	sudo cp *.so /usr/local/lib
	sudo cp *.so /usr/lib
	#sudo cp clear_os_stats /usr/bin

clean:
	rm -rf *.so
